import express from "express";
import {
  criarAnuncio,
  listarAnunciosDoUsuario,
  atualizarStatusAnuncio,
} from "../controllers/adController.js";
import authMiddleware from "../middlewares/authMiddleware.js";
import { upload } from "../middlewares/uploadMiddleware.js"; // ‚úÖ Corrigido aqui
import Ad from "../models/Ad.js";

const router = express.Router();

// üìå POST - Criar an√∫ncio
router.post("/", authMiddleware, upload.single("imagem"), criarAnuncio); // ‚úÖ Corrigido aqui

// üìå GET - Listar an√∫ncios do usu√°rio logado
router.get("/meus", authMiddleware, listarAnunciosDoUsuario);

// üìå GET - Obter um an√∫ncio por ID
router.get("/:id", authMiddleware, async (req, res) => {
  try {
    const anuncio = await Ad.findOne({ _id: req.params.id, user: req.user._id });
    if (!anuncio) return res.status(404).json({ message: "An√∫ncio n√£o encontrado." });
    res.json(anuncio);
  } catch {
    res.status(500).json({ message: "Erro ao buscar an√∫ncio." });
  }
});

// üìå PUT - Atualizar dados do an√∫ncio
router.put("/:id", authMiddleware, async (req, res) => {
  try {
    const { produto, tipo, orcamento } = req.body;
    const anuncio = await Ad.findOneAndUpdate(
      { _id: req.params.id, user: req.user._id },
      { produto, tipo, orcamento },
      { new: true }
    );
    if (!anuncio) return res.status(404).json({ message: "An√∫ncio n√£o encontrado." });
    res.json(anuncio);
  } catch {
    res.status(500).json({ message: "Erro ao atualizar an√∫ncio." });
  }
});

// üìå PATCH - Atualizar status do an√∫ncio
router.patch("/:id", authMiddleware, atualizarStatusAnuncio);

export default router;
